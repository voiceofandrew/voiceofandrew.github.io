---
const { title, src, category, duration } = Astro.props as { 
  title: string; 
  src: string; 
  category?: string; 
  duration?: string; 
};
---

<article class="card group overflow-hidden">
  <!-- Header -->
  <div class="p-6 pb-4">
    <div class="flex items-start justify-between mb-4">
      <div class="flex-1">
        <div class="flex items-center gap-2 mb-2">
          {category && (
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-brand-accent/10 text-brand-accent">
              {category}
            </span>
          )}
          {duration && (
            <span class="text-xs text-brand-muted">
              {duration}
            </span>
          )}
        </div>
        <h3 class="text-lg font-semibold text-brand-primary">
          {title}
        </h3>
      </div>
      
      <!-- Play Button -->
      <button 
        class="flex-shrink-0 w-12 h-12 voice-glow rounded-full flex items-center justify-center text-white shadow-md"
        onclick="this.nextElementSibling.play()"
        aria-label={`Play ${title}`}
      >
        <svg class="w-5 h-5 ml-0.5" fill="currentColor" viewBox="0 0 24 24">
          <path d="M8 5v14l11-7z"/>
        </svg>
      </button>
    </div>
  </div>

  <!-- Audio Player -->
  <div class="px-6 pb-6">
    <div class="relative">
      <!-- Custom Audio Controls -->
      <audio 
        class="w-full h-12 bg-brand-secondary rounded-lg shadow-inner" 
        controls 
        preload="metadata" 
        src={src}
        onloadedmetadata="this.nextElementSibling.querySelector('.duration').textContent = formatTime(this.duration)"
        onerror="this.nextElementSibling.querySelector('.duration').textContent = 'Error loading audio'"
      >
        Your browser does not support the audio element.
      </audio>
      
    </div>
    
    <!-- Audio Info -->
    <div class="mt-3 flex items-center justify-between text-xs text-brand-muted">
      <span class="flex items-center gap-1">
        <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
          <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
        </svg>
        High Quality
      </span>
      <span class="duration loading-skeleton px-2 py-1 rounded">--:--</span>
    </div>
  </div>

</article>

<script>
  function formatTime(seconds: number) {
    if (isNaN(seconds)) return '--:--';
    const mins = Math.floor(seconds / 60);
    const secs = Math.floor(seconds % 60);
    return `${mins}:${secs.toString().padStart(2, '0')}`;
  }
</script>

<style>
  /* Custom audio player styling */
  audio::-webkit-media-controls-panel {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-radius: 0.5rem;
  }
  
  audio::-webkit-media-controls-play-button,
  audio::-webkit-media-controls-pause-button {
    background: var(--gradient-primary);
    border-radius: 50%;
  }
  
  audio::-webkit-media-controls-timeline {
    background: var(--color-brand-light);
    border-radius: 0.25rem;
    height: 4px;
  }
  
  audio::-webkit-media-controls-current-time-display,
  audio::-webkit-media-controls-time-remaining-display {
    color: var(--color-brand-muted);
    font-size: 0.75rem;
  }
</style>
