---
import { PaperAirplaneIcon, CloudArrowUpIcon, EnvelopeIcon, PhoneIcon } from '@heroicons/react/24/outline';

const projectTypes = [
  "Audiobook Narration",
  "Commercial Voice Over", 
  "E-Learning & Training",
  "Documentary Narration",
  "Podcast Intro/Outro",
  "IVR & Phone Systems",
  "Character Voices",
  "YouTube & Video Content",
  "Political",
  "Other"
];

const budgetRanges = [
  "Under $500",
  "$500 - $1,000", 
  "$1,000 - $2,500",
  "$2,500 - $5,000",
  "$5,000 - $10,000",
  "$10,000+",
  "Need a quote"
];

const urgencyOptions = [
  "No rush",
  "Standard",
  "Rush"
];
---

<section class="py-20 bg-brand-secondary/20">
  <div class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-bold text-brand-primary mb-4">Start Your Project</h2>
      <p class="text-lg text-brand-muted">
        Ready to bring your project to life? Fill out the form below and I'll get back to you within 24 hours.
      </p>
    </div>

    <div class="bg-white rounded-2xl shadow-lg border border-brand-light p-8">
      <form id="contact-form" class="space-y-8" action="https://formsubmit.co/andrew@baldwinvoice.com" method="POST">
        <input type="hidden" name="_subject" value="New Project Inquiry - Baldwin Voice" />
        <input type="hidden" name="_template" value="table" />
        <input type="hidden" name="_captcha" value="false" />
        <!-- Honeypot field to reduce spam -->
        <input type="text" name="_honey" style="display:none" tabindex="-1" autocomplete="off" />
        <!-- Contact Information -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label for="name" class="block text-sm font-medium text-brand-primary mb-2">
              Full Name *
            </label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              required
              class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors"
              placeholder="Your full name"
            />
          </div>
          
          <div>
            <label for="email" class="block text-sm font-medium text-brand-primary mb-2">
              Email Address *
            </label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              required
              class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors"
              placeholder="your@email.com"
            />
          </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label for="phone" class="block text-sm font-medium text-brand-primary mb-2">
              Phone Number
            </label>
            <input 
              type="tel" 
              id="phone" 
              name="phone"
              class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors"
              placeholder="(555) 123-4567"
            />
          </div>
          
          <div>
            <label for="company" class="block text-sm font-medium text-brand-primary mb-2">
              Company/Organization
            </label>
            <input 
              type="text" 
              id="company" 
              name="company"
              class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors"
              placeholder="Your company name"
            />
          </div>
        </div>

        <!-- Project Details -->
        <div>
          <label for="project-type" class="block text-sm font-medium text-brand-primary mb-2">
            Project Type *
          </label>
          <select 
            id="project-type" 
            name="project-type" 
            required
            class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors"
          >
            <option value="">Select project type</option>
            {projectTypes.map((type) => (
              <option value={type.toLowerCase().replace(/\s+/g, '-')}>{type}</option>
            ))}
          </select>
        </div>

        <div>
          <label for="project-description" class="block text-sm font-medium text-brand-primary mb-2">
            Project Description *
          </label>
          <textarea 
            id="project-description" 
            name="project-description" 
            rows="4"
            required
            class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors resize-none"
            placeholder="Tell me about your project, target audience, tone, and any specific requirements..."
          ></textarea>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label for="budget" class="block text-sm font-medium text-brand-primary mb-2">
              Budget Range
            </label>
            <select 
              id="budget" 
              name="budget"
              class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors"
            >
              <option value="">Select budget range</option>
              {budgetRanges.map((range) => (
                <option value={range}>{range}</option>
              ))}
            </select>
          </div>
          
          <div>
            <label for="urgency" class="block text-sm font-medium text-brand-primary mb-2">
              Timeline
            </label>
            <select 
              id="urgency" 
              name="urgency"
              class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors"
            >
              <option value="">Select timeline</option>
              {urgencyOptions.map((option) => (
                <option value={option}>{option}</option>
              ))}
            </select>
          </div>
        </div>

        <!-- File Upload -->
        <div>
          <label for="script" class="block text-sm font-medium text-brand-primary mb-2">
            Script or Project Files
          </label>
          <div class="border-2 border-dashed border-brand-light rounded-lg p-6 text-center hover:border-brand-accent transition-colors">
            <CloudArrowUpIcon className="w-12 h-12 text-brand-muted mx-auto mb-4" />
            <p class="text-brand-muted mb-2">Drop your files here or click to browse</p>
            <p class="text-sm text-brand-muted">PDF, DOC, TXT files accepted (Max 10MB)</p>
            <input 
              type="file" 
              id="script" 
              name="script"
              accept=".pdf,.doc,.docx,.txt"
              class="hidden"
            />
          </div>
        </div>

        <!-- Additional Information -->
        <div>
          <label for="additional-info" class="block text-sm font-medium text-brand-primary mb-2">
            Additional Information
          </label>
          <textarea 
            id="additional-info" 
            name="additional-info" 
            rows="3"
            class="w-full px-4 py-3 border border-brand-light rounded-lg focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors resize-none"
            placeholder="Any other details, questions, or special requirements..."
          ></textarea>
        </div>

        <!-- Submit Button -->
        <div class="text-center">
          <button 
            type="submit" 
            class="btn-primary text-lg px-12 py-4 group"
          >
            Send Project Inquiry
            <PaperAirplaneIcon className="w-5 h-5 ml-2 inline-block group-hover:translate-x-1 transition-transform" />
          </button>
          <div id="contact-status" class="mt-4 text-sm"></div>
        </div>
      </form>

      <!-- Success Alert (shown after successful submission) -->
      <div id="contact-success" class="hidden mt-4 rounded-lg border border-green-200 bg-green-50 p-4">
        <div class="flex items-start gap-3 text-green-800">
          <svg class="w-5 h-5 flex-shrink-0" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-2.59a.75.75 0 1 0-1.06-1.06l-4.72 4.72-1.78-1.78a.75.75 0 0 0-1.06 1.06l2.31 2.31c.293.293.767.293 1.06 0l5.25-5.25Z" clip-rule="evenodd"/>
          </svg>
          <div>
            <p class="font-medium">Thanks! Your message was sent successfully.</p>
            <p class="text-sm opacity-80">I'll get back to you within 24 hours.</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Contact Information -->
    <div class="mt-16 grid grid-cols-1 md:grid-cols-2 gap-8 text-center max-w-2xl mx-auto">
      <div class="space-y-2">
        <div class="w-12 h-12 bg-brand-accent text-white rounded-full flex items-center justify-center mx-auto">
          <EnvelopeIcon className="w-6 h-6" />
        </div>
        <h3 class="font-semibold text-brand-primary">Email</h3>
        <p class="text-brand-muted">andrew@baldwinvoice.com</p>
      </div>
      
      <div class="space-y-2">
        <div class="w-12 h-12 bg-brand-accent text-white rounded-full flex items-center justify-center mx-auto">
          <PhoneIcon className="w-6 h-6" />
        </div>
        <h3 class="font-semibold text-brand-primary">Phone</h3>
        <p class="text-brand-muted">610-952-5158</p>
      </div>
      
    </div>
  </div>
</section>

<script>
  const form = document.getElementById('contact-form') as HTMLFormElement | null;
  const statusEl = document.getElementById('contact-status');
  if (form) {
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      if (statusEl) {
        statusEl.textContent = 'Sending…';
        statusEl.className = 'mt-4 text-sm text-brand-muted';
      }

      const formData = new FormData(form as HTMLFormElement);
      if (formData.get('_honey')) {
        return;
      }

      const payload = Object.fromEntries(formData.entries());
      try {
        const response = await fetch('https://formsubmit.co/ajax/ashlicharette@gmail.com', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
          body: JSON.stringify(payload)
        });
        const result = await response.json();
        if (response.ok) {
          if (statusEl) {
            statusEl.textContent = '';
            statusEl.className = 'mt-4 text-sm';
          }
          (form as HTMLFormElement).reset();
          // Hide form and show success alert
          (form as HTMLFormElement).classList.add('hidden');
          const successEl = document.getElementById('contact-success');
          if (successEl) successEl.classList.remove('hidden');
        } else {
          if (statusEl) {
            statusEl.textContent = result?.message || 'Something went wrong. Please try again.';
            statusEl.className = 'mt-4 text-sm text-red-600';
          }
        }
      } catch (err) {
        if (statusEl) {
          statusEl.textContent = 'Network error. Please try again.';
          statusEl.className = 'mt-4 text-sm text-red-600';
        }
      }
    });
  }
</script>
